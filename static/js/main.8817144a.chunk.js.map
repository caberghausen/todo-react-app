{"version":3,"sources":["todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","_this2","className","completed","react_default","a","createElement","onClick","removeDeletedTodo","src","alt","text","type","checkOff","checked","Component","NewTodo","onSubmit","addTodo","value","input","onChange","api_key","self","App","todos","bind","assertThisInitialized","todosload","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","sort","b","localeCompare","setState","open","setRequestHeader","send","event","preventDefault","length","todo_data","xhttp2","toConsumableArray","concat","newtodolist","console","log","stringify","target","xhttp3","remainingTodos","filter","todo","url","xhttp4","completedone","find","element","index","indexOf","src_NewTodo","newTodo","map","src_todo_0","key","completeTodo","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8817144a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './todo.css';\n\nclass Todo extends Component {\n  constructor(props){\n    super(props);\n    this.state=({\n      id: this.id\n    })\n  }\n  render() {\n    var className = \"\";\n    if(this.props.completed){\n      className = \"checked\";\n    }\n    return (\n      <div>\n        <hr></hr>\n        <li className={className}><button onClick={()=>this.props.removeDeletedTodo(this.props.id)}><img src=\"http://www.clipartbest.com/cliparts/ncX/ByX/ncXByXMgi.gif\" alt=\"X\"></img></button>{this.props.text}<input type=\"checkbox\" onClick={()=>this.props.checkOff(this.props.id)} checked={this.props.completed}></input></li>\n      </div>\n    );\n  }\n}\n\nexport default Todo;","import React, { Component } from 'react';\nimport './App.css';\n\nclass NewTodo extends Component {\n  constructor(props){\n    super(props)\n  }\n  render() {\n    return (\n        <div id=\"addthing\">\n        <form id=\"input\" onSubmit={this.props.addTodo}>\n          <input id=\"newtodo\" type=\"text\" value={this.props.input} onChange={this.props.onChange}/>\n          <input id=\"newbtn\" type=\"submit\" value=\"+ add todo\"/>\n        </form>\n        </div>\n    );\n  }\n}\n\nexport default NewTodo;","import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './todo';\nimport NewTodo from './NewTodo';\n\nvar api_key = \"63d533-c6c784-dd52bf-a26a8b-193b55\";\nlet self = null;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [{\n        id: \"abcde\",\n        completed: false,\n        text: \"first todo\",\n        removeDeletedTodo: \"idk\"}\n      ],\n      input: \"\",\n    };\n    this.addTodo = this.addTodo.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  //GET todos\n  componentDidMount() {\n      self = this;\n      let todosload = this.state.todos;\n      var xhttp = new XMLHttpRequest();\n      xhttp.onreadystatechange = function() {\n          if (this.readyState == 4 && this.status == 200) {\n              todosload = JSON.parse(this.responseText);\n              todosload.sort(function (a, b) {\n                return a.text.localeCompare(b.text);\n              })\n              self.setState({todos: todosload});\n          }\n      };\n      xhttp.open(\"GET\", \"https://cse204.work/todos\", true);\n      xhttp.setRequestHeader(\"x-api-key\",api_key);\n      xhttp.send();\n  }\n\n  //add a todo\n  addTodo(event) {\n    event.preventDefault();\n    self = this;\n    if(self.state.input.length > 0){\n      // Setting variable for form input (get from HTML form)\n      var todo_data = {\n          text: self.state.input\n      }\n\n      // Initalize AJAX Request\n      var xhttp2 = new XMLHttpRequest();\n      // Response handler\n      xhttp2.onreadystatechange = function() {\n          // Wait for readyState = 4 & 200 response\n          if (this.readyState == 4 && this.status == 200) {\n              self.setState({\n                todos: [...self.state.todos, JSON.parse(this.responseText)]\n              });\n              //resort the updated todo list\n              const newtodolist = self.state.todos;\n              newtodolist.sort(function (a, b) {\n                return a.text.localeCompare(b.text);\n              })\n              self.setState({\n                todos: newtodolist\n              })\n              // clear the input field\n              self.setState({input: ''});\n          } else if (this.readyState == 4) {\n              // this.status !== 200, error from server\n              console.log(this.responseText);\n          }\n      };\n      console.log(self.state.todos);\n\n      xhttp2.open(\"POST\", \"https://cse204.work/todos\", true);\n      xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n      xhttp2.setRequestHeader(\"x-api-key\", api_key);\n      xhttp2.send(JSON.stringify(todo_data));\n    }\n  \n  }\n  onChange(event){\n    self.setState({\n      input: event.target.value\n    });\n  }\n\n  removeDeletedTodo(id){\n    var xhttp3 = new XMLHttpRequest();\n    xhttp3.onreadystatechange = function() {\n        if (this.readyState == 4 && this.status == 200) {\n            console.log(id+\" removed\");\n            console.log(self);\n            const remainingTodos = self.state.todos.filter((todo) => {\n              // Looping through all todos, if the id of the current todo DOES NOT equal the id of the todo we want to delete, keep it\n              if (todo.id !== id) {\n                return todo;\n              }\n            });\n            self.setState({\n              todos: remainingTodos\n            })\n        }\n    };\n    var url = \"https://cse204.work/todos/\";\n    url += id;\n    xhttp3.open(\"DELETE\", url, true);\n    xhttp3.setRequestHeader(\"x-api-key\",api_key);\n    xhttp3.send();\n  }\n\n  completeTodo(id){\n    var data = {\n        completed: true\n    }\n\n    var xhttp4 = new XMLHttpRequest();\n    xhttp4.onreadystatechange = function() {\n        if (this.readyState == 4 && this.status == 200) {\n            const newtodolist = self.state.todos;\n            const completedone = self.state.todos.find(element => element.id.localeCompare(id)==0);\n            const index = self.state.todos.indexOf(completedone);\n            console.log(id+\" found at: \"+index);\n            newtodolist[index].completed = true;\n            console.log(newtodolist[index]);\n            //sort alphabetically\n            newtodolist.sort(function (a, b) {\n              return a.text.localeCompare(b.text);\n            })\n            console.log(newtodolist);\n            self.setState({\n              todos: newtodolist\n            })\n        }\n    };\n    var url = \"https://cse204.work/todos/\";\n    url += id;\n    xhttp4.open(\"PUT\", url, true);\n    xhttp4.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp4.setRequestHeader(\"x-api-key\", api_key);\n    xhttp4.send(JSON.stringify(data));\n  }\n\n  render() {\n    return (\n      <div id=\"body\">\n            <div id=\"header\">\n                <h1>Quarantine ToDo list</h1>\n                <label id=\"mobile\">mobile™️</label>\n            </div>\n            <div id=\"addthing\">\n            <NewTodo addTodo={this.addTodo} newTodo={this.newTodo} onChange={this.onChange} input={this.state.input} />\n            </div>\n            \n            <div>\n            <ul id = \"todoslist\">\n              {this.state.todos.map((todo) =>\n                <Todo key={todo.id} id={todo.id} completed={todo.completed}\n                  text={todo.text} removeDeletedTodo={this.removeDeletedTodo} checkOff={this.completeTodo}/>\n              )}\n            </ul>\n        </div>\n        </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}